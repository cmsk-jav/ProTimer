/*buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath "gradle.plugin.com.github.johnrengelman:shadow:7.1.2"
    }
}*/

plugins {
    id 'java'
    id 'application'
    id 'groovy'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.jlink' version '2.24.1'
    id 'java-library-distribution'
}


group 'com.sk'
version '1.0.0'

repositories {
    mavenCentral()
}

/*ext {
    junitVersion = '5.8.2'
}*/

sourceCompatibility = '11'
targetCompatibility = '11'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.sk.protimer'
    mainClass = 'com.sk.protimer.ApplicationEntry'
}

javafx {
    version = '15.0.1'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics']
}
/*test {
    useJUnitPlatform()
}*/
/*
jlink {
    *//*imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']*//*
    launcher {
        name = 'com.sk.protimer.ApplicationEntry'
    }
}

jlinkZip {
    group = 'distribution'
}
*/

// Include dependent libraries in archive.
mainClassName = "com.sk.protimer.ApplicationEntry"

//create a single Jar with all dependencies


/*jar {
    manifest {
        attributes "Main-Class": "com.sk.protimer.ApplicationEntry"
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    sourceSets {
        main {
            output.resourcesDir = "build/libs/resources"
        }
    }
}*/

dependencies {
    implementation('org.apache.groovy:groovy:4.0.4')
//    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
//    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    // https://mvnrepository.com/artifact/org.yaml/snakeyaml
    implementation 'org.yaml:snakeyaml:1.33'
    // https://mvnrepository.com/artifact/org.codehaus.groovy/groovy-yaml
    implementation 'org.apache.groovy:groovy-yaml:3.0.13'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.4'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.4'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-yaml
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.4'
// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4'
// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.4'
// https://mvnrepository.com/artifact/org.apache.groovy/groovy-json
    implementation 'org.apache.groovy:groovy-json:4.0.4'
    //JavaFX
    implementation 'org.openjfx:javafx:15.0.1'
}

tasks.jar.dependsOn("copyDependencies")
jar {
    manifest{
        attributes "Main-Class" : "$mainClassName", "Class-Path": configurations.compileClasspath.collect { "libs/"+it.getName() }.join(' ')
    }
}


/*
task fatJar(type:Jar){
    manifest{
        attributes 'Main-Class': 'com.sk.protimer.ApplicationEntry',
        'Implementation-Title' : 'Gradle Fat Jar Demo',
        'Impementation-Version' : '1.0'
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from{
        configurations.compileClasspath.collect{it.isDirectory() ? it : zipTree(it)}
    }
    with jar
}*/

task copyDependencies(type: Copy) {
    from configurations.runtimeClasspath
    into 'libs'
}

